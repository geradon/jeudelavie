         *= $0801         .BYTE $0B,$08 ; $080B         .BYTE $0A,$00 ; $0A BYTES LONG         .BYTE $9E,$20 ; "SYS "         .BYTE $34,$30,$39,$36 ; "4096"         .BYTE $00,$00,$00         *= $1000JUMPBACK = $0140BUFFER1  = $5000BUFFER2  = $5000BUFFER3  = $50FABUFFER4  = $51F4BUFFER5  = $52EEBUFFER6  = BUFFER5+$C8BUFFER8  = BUFFER6+$C8;BUFFER7  = BUFFER8+$28LINE1    = $4000LINE2    = $4000LINE3    = $40FALINE4    = $41F4LINE5    = $42EELINE6    = LINE5+$FALINE8    = LINE6+$FA;LINE7    = LINE8+$28         LDA #147 ; CLS         JSR $FFD2 ; PRINT CHAR         LDA #2         STA $D020         LDA #6         STA $D021         LDX #$FFLOK      INX         LDA #1         STA $D800,X         STA $D800+250,X         STA $D800+500,X         STA $D800+750,X         CPX #250         BCC LOK         SEI ; KILL INTERRUPTS         LDA #<JUMPBACK         STA $0318 ; INTERRUPT ÌÂ         LDA #>JUMPBACK         STA $0319         JSR STOCK         LDA #13         JSR $FFD2LOOP         LDX #0    ; nth CHAR         STX COLONNE         JSR SET2				 ; 2nd quarter of screen		          LDA #$FB         STA AUTO3+$01         LDA #$40         STA AUTO3+$02         LDA #$F9         STA AUTO4+$01         LDA #$40         STA AUTO4+$02         LDA #$D2         STA AUTO5+$01         LDA #$40         STA AUTO5+$02         LDA #$22         STA AUTO6+$01         LDA #$41         STA AUTO6+$02         LDA #$D1         STA AUTO7+$01         LDA #$40         STA AUTO7+$02         LDA #$D3         STA AUTO8+$01         LDA #$40         STA AUTO8+$02         LDA #$23         STA AUTO9+$01         LDA #$41         STA AUTO9+$02         LDA #$21         STA AUTOA+$01         LDA #$41         STA AUTOA+$02         LDA #$FA         STA BUFFB+$01         STA BUFFC+$01         LDA #$50         STA BUFFB+$02         STA BUFFC+$02         JSR SET2         ; 3rd quarter of screen         LDA #$F5         STA AUTO3+$01         LDA #$41         STA AUTO3+$02         LDA #$F3         STA AUTO4+$01         LDA #$41         STA AUTO4+$02         LDA #$CC         STA AUTO5+$01         LDA #$41         STA AUTO5+$02         LDA #$1C         STA AUTO6+$01         LDA #$42         STA AUTO6+$02         LDA #$CB         STA AUTO7+$01         LDA #$41         STA AUTO7+$02         LDA #$CD         STA AUTO8+$01         LDA #$41         STA AUTO8+$02         LDA #$1D         STA AUTO9+$01         LDA #$42         STA AUTO9+$02         LDA #$1B         STA AUTOA+$01         LDA #$42         STA AUTOA+$02         LDA #$F4         STA BUFFB+$01         STA BUFFC+$01         LDA #$51         STA BUFFB+$02         STA BUFFC+$02         JSR SET2         ; 4th quarter of screen		          LDA #$EF         STA AUTO3+$01         LDA #$42         STA AUTO3+$02         LDA #$ED         STA AUTO4+$01         LDA #$42         STA AUTO4+$02         LDA #$C6         STA AUTO5+$01         LDA #$42         STA AUTO5+$02         LDA #$16         STA AUTO6+$01         LDA #$43         STA AUTO6+$02         LDA #$C5         STA AUTO7+$01         LDA #$42         STA AUTO7+$02         LDA #$C7         STA AUTO8+$01         LDA #$42         STA AUTO8+$02         LDA #$17         STA AUTO9+$01         LDA #$43         STA AUTO9+$02         LDA #$15         STA AUTOA+$01         LDA #$43         STA AUTOA+$02         LDA #$EE         STA BUFFB+$01         STA BUFFC+$01         LDA #$52         STA BUFFB+$02         STA BUFFC+$02         JSR SET2         ; 1st quarter of screen         LDA #$01         STA AUTO3+$01         LDA #$40         STA AUTO3+$02         LDA #$FF         STA AUTO4+$01         LDA #$3F         STA AUTO4+$02         LDA #$D8         STA AUTO5+$01         LDA #$3F         STA AUTO5+$02         LDA #$28         STA AUTO6+$01         LDA #$40         STA AUTO6+$02         LDA #$D7         STA AUTO7+$01         LDA #$3F         STA AUTO7+$02         LDA #$D9         STA AUTO8+$01         LDA #$3F         STA AUTO8+$02         LDA #$29         STA AUTO9+$01         LDA #$40         STA AUTO9+$02         LDA #$27         STA AUTOA+$01         LDA #$40         STA AUTOA+$02         LDA #$00         STA BUFFB+$01         STA BUFFC+$01         LDA #$50         STA BUFFB+$02         STA BUFFC+$02LOOP2		; Swap of buffers         LDX #0LOL1         LDA $5000,X         STA $4000,X         LDA $50FA,X         STA $40FA,X         LDA $51F4,X         STA $41F4,X         LDA $52EE,X         STA $42EE,X         INX         CPX #250         BNE LOL1		; Display of screen from buffer		         LDX #0LOO1     LDA $4000,X         STA $0400,X         LDA $40FA,X         STA $04FA,X         LDA $41F4,X         STA $05F4,X         LDA $42EE,X         STA $06EE,X         LDA $43E8,X         STA $07E8,X         INX         CPX #250         BNE LOO1         JMP LOOP		 SET2         LDX COLONNEAUTO2   GOON2         LDY #0AUTO3    LDA $4001,X       ;EAST         CMP #0         BNE AUTO4         INYAUTO4    LDA $3FFF,X       ;WEST         CMP #0         BNE AUTO5         INYAUTO5    LDA $3FD8,X      ;NORTH         CMP #0         BNE AUTO6         INYAUTO6    LDA $4028,X      ;SOUTH         CMP #0         BNE AUTO7         INYAUTO7    LDA $3FD7,X       ;NW         CMP #0         BNE AUTO8         INYAUTO8    LDA $3FD9,X       ;NE         CMP #0         BNE AUTO9         INYAUTO9    LDA $4029,X       ;SE         CMP #0         BNE AUTOA         INYAUTOA    LDA $4027,X      ;SW		 CMP #0         BNE ICI2         INYICI2         STY COMBIEN         JSR QUEFAIRE         LDX COLONNE         LDA DEADALIVE         CMP #0         BEQ KILL2         CMP #1         BEQ BORN2         JMP VOILA2BORN2         LDA #0BUFFB    STA $5000,X         JMP VOILA2KILL2         LDA #32BUFFC    STA $5000,X         JMP VOILA2VOILA2         INX         CPX #251         BCS STOP2         STX COLONNE         JMP GOON2STOP2         LDX #0         STX COLONNE         RTSQUEFAIRE         LDA COMBIEN         CMP #2         BCC MORT         BEQ RIEN         CMP #3         BEQ VIE         CMP #4         BCS MORT         RTSMORT     LDX #0         STX DEADALIVE         RTSVIE      LDX #1         STX DEADALIVE         RTSRIEN     LDX #2         STX DEADALIVE         RTS		 		; Stock the .byte dataSTOCK    LDX #0LO0      LDA #32         STA $4000-$28,X         STA $5000-$28,X         STA $43E8,X         STA $53E8,X         INX         CPX #40         BNE LO0		          LDX #0LO1      LDA GRID1,X         STA $4000,X         STA $5000,X         INX         CPX #250         BNE LO1		          LDX #0LO2      LDA GRID2,X         STA $40FA,X         STA $50FA,X         INX         CPX #250         BNE LO2         LDX #0LO3      LDA GRID3,X         STA $41F4,X         STA $51F4,X         INX         CPX #250         BNE LO3         LDX #0LO4      LDA GRID4,X         STA $42EE,X         STA $52EE,X         INX         CPX #250         BNE LO4         RTSONE         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32GRID1    .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 0,0,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 0,0,0,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,0,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,0,0,32,0,32,32         .BYTE 32,32,32,0,0,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 0,32,0,32,32,32,32,0         .BYTE 0,0,32,32,32,32,32,32         .BYTE 32,32,0,32,32,0,32,32         .BYTE 32,32,32,0,0,32,32,32         .BYTE 32,0,0,32,32,32,32,0         .BYTE 32,0,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,0,0,32,0,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,0,0,32,32,32,0,32         .BYTE 32,0GRID2         .BYTE 32,32,32,32,32,32,32,0         .BYTE 32,32,0,0,32,32,0,0         .BYTE 0,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,0         .BYTE 32,0,32,32,32,32,32,32         .BYTE 32,0,32,32,32,0,32,32         .BYTE 0,0,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 0,32,0,32,32,32,32,32         .BYTE 32,0,32,32,0,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,0,32,32,32,32,32         .BYTE 32,32,32,0,0,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32GRID3         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32GRID4         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32,32,32,32,32,32,32         .BYTE 32,32COLONNE  .BYTE 0COMBIEN  .BYTE 0DEADALIVE .BYTE 0